服务器建立成功之后，如果有客户端请求连接本服务器，需要用socket_accept等方法建立一个新的socket连接，并接收客户端的请求信息，处理之后，返回响应信息，然后握手成功。
接下来是字符串通信，客户端send过来一段字符串信息，服务器端接收到并返回给客户端这个字符串。

首先我们处理接收到的信息，根据上篇文章介绍的数据传输格式，并firefox的FIN一直为1，RSV1,2,3为0，如果是文本消息，那么opcode为1，所以数据包的第一个数据是0x81，然后是一位mask值，firefox发来的数据是加了掩码的，所以mask值为1，后面跟7位是数据信息长度，我们以客户端发送hi为例，那么长度就是2个字节，则第二个数据就是0x82，这里没有约定扩展数据，所以不存在扩展数据长度字节，接下来是4个数据的掩码（因为我们这里是发送hi，2个字节的信息，小于125个字节，所以掩码是第3-第6个数据，根据数据长度的不同，掩码的位置也不同，如果取到那7位表示的值是126，则掩码为第5-第8个数据，如果取到那7位表示的值是127，则掩码为第11-第14个数据），后面跟客户端发送的内容数据，处理接收到的数据我们需要用取到的掩码依次轮流跟内容数据做异或(^)运算，第一个内容数据与第一个掩码异或，第二个内容数据与第二个掩码异或……第五个内容数据与第一个掩码异或……以此类推，一直到结束，然后对内容进行编码。

其次是服务器端发送给客户端的响应信息，数据格式跟接收的信息一样，只是我们不需要生成掩码，掩码位为0，后面也不存在4个掩码数据。